<!DOCTYPE html>
<html>

<div id="Welcome Mentor" style.display="none">Hello Mentor</div>
<div id="Welcome Student" style.display="none">Hello Student</div>


<head>
  <title>Code Block Details</title>
  <!-- Add the Highlight.js library -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js"></script>

  <!-- Add the desired CSS theme for syntax highlighting -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css" rel="stylesheet">

</head>



<body>
  <h1>Code Block Details</h1>

  <script>
    if (<%= isFirst %>) {
      document.getElementById('Welcome Mentor').style.display = 'block';
      document.getElementById('Welcome Student').style.display = 'none';
    } else {
      document.getElementById('Welcome Student').style.display = 'block';
      document.getElementById('Welcome Mentor').style.display = 'none';
    }
  </script>

  <div id="code-block">
    <h2>
      <%= codeBlock.title %>
    </h2>
    <pre>
    <code id="codeArea" rows="10" cols="80" contenteditable="true">
      <%= codeBlock.code %>
    </code>
  </pre>

  <button id="Highlight">Please press to highlight code block</button>

    <script>
      hljs.highlightElement(document.getElementById("codeArea"), { language: "javascript" });
    </script>

    <script>
      // If isFirst, make the codeArea readonly
      if (<%= isFirst %>) {
        const codeArea = document.getElementById('codeArea');
        codeArea.setAttribute('contenteditable', false);
      }

      const button = document.getElementById('Highlight');
        button.addEventListener('click', () => {
          hljs.highlightElement(codeArea, { language: "javascript" });
        }); 

      // WebSocket connection
      const socket = new WebSocket('wss://' + window.location.host);

      codeArea = document.getElementById('codeArea');

      // Listen for changes to the code
      codeArea.addEventListener('input', (event) => {
        // Send to the second user
        socket.send(JSON.stringify(codeArea.innerText));
      });

      // code change message from server
      socket.addEventListener('message', (event) => {
        const parsed = JSON.parse(event.data);
        // Update the code in the first user's screen
        const codeArea = document.getElementById('codeArea');
        codeArea.innerText = parsed;
        var solution = <%- JSON.stringify((codeBlock.solution)) %>;
        if (parsed == solution) {
          alert('\uD83D\uDE03'); // Unicode for smiling face emoji
        }
      });
      
    </script>
  </div>
</body>

</html>